//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nieruchomosci.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Nieruchomosc
    {
        public Nieruchomosc()
        {
            this.NieruchomoscPhoto = new HashSet<NieruchomoscPhoto>();
        }

        [Display(Name = "ID")]
        public int NieruchomoscID { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [Display(Name = "Rodzaj transakcji")]
        public int TypTransakcjiID { get; set; }
        [Display(Name = "Rodzaj nieruchomoœci")]
        [Required(ErrorMessage = "Pole jest wymagane")]
        public int RodzajNieruchomosciID { get; set; }
        [Display(Name = "U¿ytkownik")]
        public int UserId { get; set; }
        [Display(Name = "Typ nieruchomoœci")]
        [StringLength(50, ErrorMessage = "Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Typ_nieruchomosci { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [Display(Name = "Typ budynku")]
        [StringLength(50, ErrorMessage = "Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Typ_budynku { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [StringLength(100, ErrorMessage = "Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Adres { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [StringLength(100, ErrorMessage = "Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Miasto { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [Display(Name = "Powierzchnia")]

        //[DisplayFormat(DataFormatString = "{0:c}")]
        // [Range(0,99999999,ErrorMessage = "Wartoœæ spoza zakresu")]
        //[DisplayFormat(DataFormatString = "{0:0.##}")]
        // [Range(typeof(Decimal), "0", "9999", ErrorMessage = "{0} must be a decimal/number between {1} and {2}.")]
        //[DisplayFormat(DataFormatString = "{0:0.##}", ApplyFormatInEditMode = true)]
        public Nullable<decimal> Powierzchnia { get; set; }
        //public Nullable<double> Powierzchnia { get; set; }
        [Display(Name = "Powierzchnia dzia³ki")]
        //   [Range(0, 99999999, ErrorMessage = "Wartoœæ spoza zakresu")]
        // [DisplayFormat(DataFormatString = "{0:c}")]
        // [DisplayFormat(DataFormatString = "{0:0.##}")]
        //[Range(typeof(Decimal), "0", "9999", ErrorMessage = "{0} must be a decimal/number between {1} and {2}.")]



        public Nullable<decimal> Powierzchnia_dz { get; set; }
        //public Nullable<double> Powierzchnia_dz { get; set; }
        public Nullable<int> Pietro { get; set; }
        public string Standard { get; set; }
        [Display(Name = "Liczba pokoi")]
        public Nullable<int> Liczba_pokoi { get; set; }
        [Display(Name = "Rok budowy")]
        public Nullable<int> Rok_budowy { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]

        [DisplayFormat(DataFormatString = "{0:c}")]
        [DataType(DataType.Currency)]

        public Nullable<decimal> Cena { get; set; }
               [StringLength(50, ErrorMessage = "Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Uzbrojenie { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [DataType(DataType.MultilineText)]
        public string Opis { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [StringLength(100, ErrorMessage = "Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Ogloszeniodawca { get; set; }
        [Required(ErrorMessage = "Pole jest wymagane")]
        [Display(Name = "Telefon kontaktowy")]
        [DataType(DataType.Text)]
        [StringLength(9,ErrorMessage="Maksymalna d³ugoœæ pola {0} wynosi {1} znaków")]
        public string Tel_kont { get; set; }
        [Display(Name = "Data dodania")]
        [Required(ErrorMessage = "Pole jest wymagane")]
        [DisplayFormat(DataFormatString = "{0:d}")]
        public System.DateTime Data_dodania { get; set; }

        public virtual TypTransakcji TypTransakcji { get; set; }
        public virtual RodzajNieruchomosci RodzajNieruchomosci { get; set; }
        public virtual UserProfile UserProfile { get; set; }
        public virtual ICollection<NieruchomoscPhoto> NieruchomoscPhoto { get; set; }
    }
}
