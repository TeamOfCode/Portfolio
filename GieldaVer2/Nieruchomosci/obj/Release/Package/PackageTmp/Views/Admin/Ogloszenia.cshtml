@model PagedList.IPagedList<Nieruchomosci.Models.Nieruchomosc>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Ogłoszenia użytkowników";
}

<h2>Ogloszenia wszystkich użytkowników:</h2>



    @*  @using (Html.BeginForm())
        {
        <p>
            Masto: @Html.TextBox("SearchString")
            <input type="submit" value="Search" />
        </p>
        }*@


@using (Html.BeginForm("Ogloszenia", "Admin", FormMethod.Get))
{
    @*  <p>
                Miasto: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)

                @*Rodzaj nieruchomości: @Html.DropDownList("Rodzaje", )

                   Rodzaj nieruchomości: @Html.DropDownList("Rodzaj", ViewBag.RodzajeNieruchomosci as SelectList, String.Empty, ViewBag.Rodzaj as string)


        </p>
            <P>
            Cena od: @Html.TextBox("CenaOd", ViewBag.CenaOd as decimal?)
                Cena do: @Html.TextBox("CenaDo", ViewBag.CenaDo as decimal?)
                </P>
            <p>
                Powierzchnia od: @Html.TextBox("PowierzchniaOd", ViewBag.PowierzchniaOd as decimal?)
                Powierzchnia do: @Html.TextBox("PowierzchniaDo", ViewBag.PowierzchniaDo as decimal?)*@





    <table class="tg1">
        <tr>
            <th class="tg-e3zv">Miasto:</th>
            <th class="tg-031e">@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)</th>
            <th class="tg-e3zv">Rodzaj nieruchomości:</th>
            <th class="tg-031e">@Html.DropDownList("Rodzaj", ViewBag.RodzajeNieruchomosci as SelectList, String.Empty, ViewBag.Rodzaj as string)</th>
        </tr>
        <tr>
            <td class="tg-e3zv">Cena od:</td>
            <td class="tg-031e">@Html.TextBox("CenaOd", ViewBag.CenaOd as decimal?)</td>
            <td class="tg-e3zv">Cena do:</td>
            <td class="tg-031e">@Html.TextBox("CenaDo", ViewBag.CenaDo as decimal?)</td>
        </tr>
        <tr>
            <td class="tg-e3zv">Powierzchnia od:</td>
            <td class="tg-031e">@Html.TextBox("PowierzchniaOd", ViewBag.PowierzchniaOd as decimal?)</td>
            <td class="tg-e3zv">Powierzchnia do:</td>
            <td class="tg-031e">@Html.TextBox("PowierzchniaDo", ViewBag.PowierzchniaDo as decimal?)</td>
        </tr>
    </table>



    <p>
        <input type="submit" value="Filtruj" />
    </p>
}

    @*@Html.DisplayNameFor(model => model.First().TypTransakcji.Typ)*@
    
       


<table>
    <tr>
     

        <th>
            @Html.ActionLink("Rodzaj transakcji", "Ogloszenia", new { sortOrder = ViewBag.TransakcjaSortParm, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj })
        </th>
        <th>
            @Html.ActionLink("Rodzaj nieruchomosci", "Ogloszenia", new { sortOrder = ViewBag.RodzajNieruchomosciSortParm, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj })
        </th>


        <th>
            @Html.ActionLink("Miasto", "Ogloszenia", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj })
        </th>

        <th>
            @Html.ActionLink("Powierzchnia", "Ogloszenia", new { sortOrder = ViewBag.PowierzchniaSortParm, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj })
        </th>
        <th>
            @Html.ActionLink("Cena", "Ogloszenia", new { sortOrder = ViewBag.CenaSortParm, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj })
        </th>
        <th>
            @Html.ActionLink("Data dodania", "Ogloszenia", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj })
        </th>





        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TypTransakcji.Typ)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RodzajNieruchomosci.RodzajNieruchomosciRodzaj)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Miasto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Powierzchnia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cena)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data_dodania)
            </td>
            <td>
                @Html.ActionLink("Edytuj", "EditO", new { id = item.NieruchomoscID }) |
                @Html.ActionLink("Pokaż", "DetailsO", new { id = item.NieruchomoscID }) |
                @Html.ActionLink("Usuń", "DeleteO", new { id = item.NieruchomoscID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Ogloszenia",
           new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, CenaOd = ViewBag.CenaOd, CenaDo = ViewBag.CenaDo, PowierzchniaOd = ViewBag.PowierzchniaOd, PowierzchniaDo = ViewBag.PowierzchniaDo, Rodzaj = ViewBag.Rodzaj }))

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/globalize/globalize.js"></script>
    <script src="~/Scripts/globalize/cultures/globalize.culture.pl-PL.js"></script>
    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) ||
                !isNaN(Globalize.parseFloat(value));
        }
        $(document).ready(function () {
            Globalize.culture('pl-PL');
        });
    </script>
    <script>
        jQuery.extend(jQuery.validator.methods, {
            range: function (value, element, param) {
                //Use the Globalization plugin to parse the value
                var val = $.global.parseFloat(value);
                return this.optional(element) || (
                    val >= param[0] && val <= param[1]);
            }
        });

    </script>
}